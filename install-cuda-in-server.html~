<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2022-05-09 一 22:04 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>为一台全新的服务器配置Nvidia GPU环境！</title>
<meta name="author" content="zi liang" />
<meta name="generator" content="Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
</style>
</head>
<body>
<div id="content" class="content">
<h1 class="title">为一台全新的服务器配置Nvidia GPU环境！</h1>
<div id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#org17b24fb">0.1. 安装driver</a></li>
<li><a href="#org510e1b0">0.2. 安装cuda</a></li>
<li><a href="#org9a80238">0.3. 安装失败</a></li>
</ul>
</li>
<li><a href="#org6712fd1">1. 参考文献：</a></div>
</div>
<p>
最近由我负责进行运维，现对Nvidia相关的GPU硬件的配置进行整理。
</p>

<p>
服务器的配置如下：
</p>

<div class="org-src-container">
<pre class="src src-sh">OS: Ubuntu 18.04
GPU: Tesla V100s
</pre>
</div>


<p>
安装流程：
</p>

<ol class="org-ol">
<li>安装driver。</li>
<li>安装cuda环境。</li>
</ol>

<div id="outline-container-org17b24fb" class="outline-3">
<h3 id="org17b24fb"><span class="section-number-3">0.1.</span> 安装driver</h3>
<div class="outline-text-3" id="text-0-1">
<p>
从<a href="https://www.nvidia.com/Download/index.aspx">这里</a>查看合适的驱动版本号。保留以该服务器的配置，可查询如：
</p>


<div id="orge7e93d9" class="figure">
<p><img src="./images/screenshot_20220330_181327.png" alt="screenshot_20220330_181327.png" /> 
</p>
</div>

<p>
点search，查询结果为：
</p>


<div id="org1957631" class="figure">
<p><img src="./images/screenshot_20220330_181346.png" alt="screenshot_20220330_181346.png" />
</p>
</div>

<p>
说明我的驱动版本是450可以支持cuda11.0
</p>

<p>
之后运行以下命令查看有无450：
</p>

<div class="org-src-container">
<pre class="src src-sh">sudo add-apt-repository ppa:graphics-drivers  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#28155;&#21152;NVIDA&#26174;&#21345;&#39537;&#21160;&#24211;</span>
sudo apt update
ubuntu-drivers devices  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#26174;&#31034;&#21487;&#23433;&#35013;&#39537;&#21160;</span>
<span style="color: #615B75;">## </span><span style="color: #615B75;">&#20063;&#21487;&#20197;&#29992;&#19979;&#38754;&#30340;&#21629;&#20196;&#26597;&#30475;&#25903;&#25345;&#30340;driver</span>
sudo apt list nvidia-driver*
</pre>
</div>


<div id="org5c8a19f" class="figure">
<p><img src="./images/screenshot_20220330_181643.png" alt="screenshot_20220330_181643.png" />
</p>
</div>

<p>
然后选择自己想安装的去安装。
</p>

<p>
比如我的是：
</p>

<div class="org-src-container">
<pre class="src src-sh">sudo apt install nvidia-driver-450-server
</pre>
</div>

<p>
之后可以用 <code>sudo reboot</code> 重启电脑，然后输入 <code>nvidia-smi</code> 就可以看得见安装结果了。
</p>
</div>
</div>

<div id="outline-container-org510e1b0" class="outline-3">
<h3 id="org510e1b0"><span class="section-number-3">0.2.</span> 安装cuda</h3>
<div class="outline-text-3" id="text-0-2">
<p>
然而，安装驱动后，虽然nvidia-smi弹出的框右上角显示有cuda版本，
但真实的cuda还没有安装。可以先去<a href="https://developer.nvidia.com/cuda-toolkit-archive">这里</a>查找目标版本号对应的cuda，但是
<b>不要执行</b> 其自带的安装建议，因为这样的结果是，安装最新版的cuda，导致
最终驱动与cuda匹配失败。
</p>

<p>
比如cuda11.0的页面，如果我选择deb network，会提示我如此安装：
</p>


<div class="org-src-container">
<pre class="src src-sh">wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
sudomv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
sudo add-apt-repository <span style="color: #65E6A7;">"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"</span>
sudo apt-get update
sudo apt-get -y install cuda
</pre>
</div>

<p>
最后一步千万不要执行！这样会安装成最新版。
</p>

<p>
应改成：
</p>

<div class="org-src-container">
<pre class="src src-sh">sudo apt install cuda-toolkit-11-0
</pre>
</div>

<p>
版本号可以根据实际需求进行调整。
</p>

<p>
安装成功之后，加入路径并检查：
</p>

<div class="org-src-container">
<pre class="src src-sh"><span style="color: #49bdb0;">export</span> <span style="color: #eed891;">PATH</span>=$<span style="color: #eed891;">PATH</span>:/usr/local/cuda/bin  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#28155;&#21152;&#29615;&#22659;&#21464;&#37327;</span>
nvcc -V  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#26816;&#26597;CUDA&#29256;&#26412;</span>
</pre>
</div>


<p>
很贴心的，参考文献中给出了验证cuda是否有效的方法（不要忘记修改为你自己的版本号）
</p>

<div class="org-src-container">
<pre class="src src-sh">cuda-install-samples-10.x.sh ~  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#23433;&#35013;cuda 10.x&#30340;&#26679;&#26412;&#21040;~&#30446;&#24405;&#19979;&#65292;&#26367;&#25442;x&#20026;&#20320;&#30340;&#29256;&#26412;&#21495;</span>
<span style="color: #49bdb0;">cd</span> ~/NVIDIA_CUDA-10.x_Samples  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#36827;&#20837;Sample&#30446;&#24405;</span>
make  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#26377;&#28857;&#32791;&#26102;&#65292;&#22914;&#26524;&#31995;&#32479;&#29256;&#26412;&#19981;&#21305;&#37197;&#65292;gcc&#29256;&#26412;&#21487;&#33021;&#20250;&#23548;&#33268;&#25253;&#38169;&#12290;</span>
./1_Utilities/deviceQuery/deviceQuery  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#25191;&#34892;&#26816;&#26597;&#31243;&#24207;</span>
</pre>
</div>
</div>
</div>


<div id="outline-container-org9a80238" class="outline-3">
<h3 id="org9a80238"><span class="section-number-3">0.3.</span> 安装失败</h3>
<div class="outline-text-3" id="text-0-3">
<p>
如果版本不兼容，需要卸载掉驱动和cuda从头再来。
</p>

<p>
卸载方法是：
</p>

<div class="org-src-container">
<pre class="src src-sh">sudo apt-get --purge remove <span style="color: #65E6A7;">"nvidia*"</span>  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#21024;&#38500;&#39537;&#21160;&#65288;20.04&#29992;&#36807;&#36825;&#20010;&#20195;&#30721;&#36807;&#21518;&#21487;&#33021;&#20250;&#23548;&#33268;&#31616;&#20415;&#26041;&#27861;&#26080;&#27861;&#20351;&#29992;&#65289;</span>
sudo apt-get --purge remove <span style="color: #65E6A7;">"*cuda*"</span> <span style="color: #65E6A7;">"*cublas*"</span>  <span style="color: #615B75;">#</span><span style="color: #615B75;">&#21024;&#38500;cuda</span>
</pre>
</div>
</div>
</div>



<div id="outline-container-org6712fd1" class="outline-2">
<h2 id="org6712fd1"><span class="section-number-2">1.</span> 参考文献：</h2>
<div class="outline-text-2" id="text-1">
<p>
<a href="https://zhuanlan.zhihu.com/p/143429249">https://zhuanlan.zhihu.com/p/143429249</a>
</p>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="date">Date: Wed Mar 30 18:00:57 2022</p>
<p class="author">Author: zi liang</p>
<p class="date">Created: 2022-05-09 一 22:04</p>
<p class="validation"><a href="https://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
