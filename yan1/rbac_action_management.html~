<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2022-03-26 周六 21:55 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>基于动作监听机制和角色权限控制的系统一瞥——以游戏作为一个嵌入式视角</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="梁子，软件学院，S0083，3120305385" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<script type="text/javascript">
// @license magnet:?xt=urn:btih:e95b018ef3580986a04669f1b5879592219e2a7a&dn=public-domain.txt Public Domain
<!--/*--><![CDATA[/*><!--*/
     function CodeHighlightOn(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.add("code-highlighted");
         target.classList.add("code-highlighted");
       }
     }
     function CodeHighlightOff(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.remove("code-highlighted");
         target.classList.remove("code-highlighted");
       }
     }
    /*]]>*///-->
// @license-end
</script>
</head>
<body>
<div id="content">
<h1 class="title">基于动作监听机制和角色权限控制的系统一瞥——以游戏作为一个嵌入式视角</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org7341428">1. 绪论</a>
<ul>
<li><a href="#org27ec220">1.1. 写在最前面的话</a></li>
<li><a href="#org553bd69">1.2. 让同一款游戏“千人千面”：在一款游戏内部进行分析和推荐的可行性</a></li>
<li><a href="#org8572eaf">1.3. 基本技术需求</a></li>
<li><a href="#org5d59b98">1.4. 本实验报告仅仅迈出了最微小的一步</a></li>
</ul>
</li>
<li><a href="#org36fc8fb">2. 一个玩具级RBAC库的实现</a>
<ul>
<li><a href="#orgc6d6649">2.1. 经典RBAC</a>
<ul>
<li><a href="#org236bedd">2.1.1. user，role，action</a></li>
<li><a href="#orgcdd6de5">2.1.2. 增删改查</a></li>
<li><a href="#org1d63dad">2.1.3. 形成配置结果：存储与加载</a></li>
<li><a href="#org080ffea">2.1.4. 与数据库的交互</a></li>
</ul>
</li>
<li><a href="#org8878052">2.2. META-RBAC：对RBAC进行管理</a></li>
<li><a href="#orge78be8c">2.3. 为用户提供一定的权限管理自由度——全新的RBAC实现</a>
<ul>
<li><a href="#orgc76a2d8">2.3.1. 简述权限管理自由度</a></li>
<li><a href="#orge3ce8d7">2.3.2. 实现与RBAC库的融合</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org6465345">3. 事件管理和监听触发机制的自我实现</a>
<ul>
<li><a href="#org8b69752">3.1. 基本原理</a></li>
<li><a href="#org4ddd5bb">3.2. 事件管理器的设计</a></li>
<li><a href="#org67e2b1d">3.3. 监听器和触发事件的设计</a></li>
</ul>
</li>
<li><a href="#orgae6b294">4. 以简陋到极致的一个界面为例，展露游戏中RBAC应用的嵌入式视角</a>
<ul>
<li><a href="#org26468ff">4.1. 基础的场景介绍</a></li>
<li><a href="#org46eb240">4.2. 界面设与示例</a></li>
</ul>
</li>
<li><a href="#org004f4fc">5. 附录</a></li>
</ul>
</div>
</div>
<div id="outline-container-org7341428" class="outline-2">
<h2 id="org7341428"><span class="section-number-2">1</span> 绪论</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org27ec220" class="outline-3">
<h3 id="org27ec220"><span class="section-number-3">1.1</span> 写在最前面的话</h3>
<div class="outline-text-3" id="text-1-1">
<ol class="org-ol">
<li>本报告的绪论内容完全不过是一个设想，没有在本次实验中实现。笔者只是基于该场景进行一个基本的展示。</li>
<li>本报告中所有代码均基于python编写，python不算是一门严肃的工业编程语言，但对快速实现和验证一些思路很有裨益。诸如“豆瓣”等网站后台或“骑马与砍杀”等著名游戏，都是基于python实现的。</li>
<li>本文的界面太简陋了，基于PYQT编写。后来，笔者学会了前端，发现前端写界面简单太多了，同时也更灵活。</li>
</ol>
</div>
</div>
<div id="outline-container-org553bd69" class="outline-3">
<h3 id="org553bd69"><span class="section-number-3">1.2</span> 让同一款游戏“千人千面”：在一款游戏内部进行分析和推荐的可行性</h3>
<div class="outline-text-3" id="text-1-2">
<p>
关于游戏的灵活性，一直都是游戏行业广为关注的主题。为了让游戏更仿真、世界观更大，无数游戏厂商在游戏里铺陈其世界观，同时又为了防止游戏过于复杂而简化使用。这种trade off在游戏界广为传承，并且，最近新出的各类游戏，都在一定程度上以“灵活”、“自适应”作为其卖点。
</p>

<p>
比如，旨在构造“全新武侠世界”的手游《楚留香》曾经宣称构造了一个完整的武林世界，每个人都可以在里面找到自己的位置。而在实际体验上，这种说法不过是简单地将RPG、养成、社交、偷菜、采集等各种类型的游戏杂糅在了一起罢了。再有另一些游戏，通过在剧情里设计不同的选择，构造一棵巨大的剧情树，而这一类的剧情树不过是实现基于规则定义好的剧情罢了。当符号主义和联结主义有效结合时，似乎这种局面才能进行改变。而本文，则是单纯考虑将推荐应用在游戏里。*面对变得越来越复杂、越来越难以全然了解的游戏世界，如何通过推荐的方式，让玩家沉浸在游戏中一种或若干种的功能玩法里面，当观察到玩家对其失去兴趣后，再通过推荐让玩家更多地了解游戏里的其他世界。这样的一个功能，目前还没有游戏涉及到。那么它是可行吗？*
</p>
</div>
</div>

<div id="outline-container-org8572eaf" class="outline-3">
<h3 id="org8572eaf"><span class="section-number-3">1.3</span> 基本技术需求</h3>
<div class="outline-text-3" id="text-1-3">
<p>
实现这样的一种功能，大概需要如下几种技术：
</p>

<ol class="org-ol">
<li>精细的数据采集。应当对每一个用户的数据进行精细的采集，除了数据库中常见的等级、充了多少钱、玩了多久等粗粒度的信息之外，更应该是：它玩哪些功能的次数最多？在哪些界面上驻留的时间最多？在聊天里谈论什么东西最多？ 本报告主要是对采集技术的分析。</li>
<li>自定义的技术。应当让玩家根据自己喜欢的功能，自定义自己的前端。同时应当开放平台，供一些极客设计特殊的页面。所有的这一切本质上是对javascript对象的处理，所以，基于javascript对象设计良好的编辑器也是必须的。</li>
<li>推荐技术。</li>
<li>游戏本身。</li>
</ol>
</div>
</div>

<div id="outline-container-org5d59b98" class="outline-3">
<h3 id="org5d59b98"><span class="section-number-3">1.4</span> 本实验报告仅仅迈出了最微小的一步</h3>
<div class="outline-text-3" id="text-1-4">
<p>
本文只对第一点进行讨论，绝不可能设计出来一个游戏。本文的目的不在于设计这样一个游戏，在于了解这一套机制，以至于有一天需要的时候可以做到。当然，课程上的这些功能都是较为基本的。
</p>
</div>
</div>
</div>

<div id="outline-container-org36fc8fb" class="outline-2">
<h2 id="org36fc8fb"><span class="section-number-2">2</span> 一个玩具级RBAC库的实现</h2>
<div class="outline-text-2" id="text-2">
<p>
RBAC源于对系统中不同角色进行体系化管理的实践，因而，RBAC的重点在于角色。角色充当了用户请求端和响应端的桥梁，因而可以使得权限控制、对象化重载成为可能。一个完善的RBAC，本身就是一个系统。粗略来看，主要可以分为景点的RBAC模块，以及在此基础上的对RBAC模块本身的权限控制管理，以及一些自定义权限的融入。
</p>

<p>
首先对经典的RBAC模块进行介绍。
</p>
</div>
<div id="outline-container-orgc6d6649" class="outline-3">
<h3 id="orgc6d6649"><span class="section-number-3">2.1</span> 经典RBAC</h3>
<div class="outline-text-3" id="text-2-1">
</div>
<div id="outline-container-org236bedd" class="outline-4">
<h4 id="org236bedd"><span class="section-number-4">2.1.1</span> user，role，action</h4>
<div class="outline-text-4" id="text-2-1-1">
<p>
经典RBAC中，主要包含三个层面的对象，分别是用户、角色和动作。其中用户和角色可以理解为数据对象，而动作可以理解为规则对象。在本库中，前二者基于字符串进行定义，动作则是一个指向对象用户的特定方法的指针。
</p>

<p>
当拥有了用户、角色、动作三者时，就可以定义彼此之间的关系矩阵，并得到相关的哈希表进行快速的查询。该部分的代码如下所示：
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #A52A2A; font-weight: bold;">self</span>.user_roles_dict=<span style="color: #707183;">{}</span>
        <span style="color: #A52A2A; font-weight: bold;">for</span> index, user <span style="color: #A52A2A; font-weight: bold;">in</span> <span style="color: #A020F0;">enumerate</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.user_list<span style="color: #707183;">)</span>:
            <span style="color: #A52A2A; font-weight: bold;">self</span>.user_roles_dict<span style="color: #707183;">[</span>user<span style="color: #707183;">]</span>=<span style="color: #707183;">[]</span>
            <span style="color: #0084C8; font-weight: bold;">index_role_list</span>=<span style="color: #A52A2A; font-weight: bold;">self</span>.user_role_matrix<span style="color: #707183;">[</span>index<span style="color: #707183;">]</span>
            <span style="color: #A52A2A; font-weight: bold;">for</span> jndex, ele <span style="color: #A52A2A; font-weight: bold;">in</span> <span style="color: #A020F0;">enumerate</span><span style="color: #707183;">(</span>index_role_list<span style="color: #707183;">)</span>:
                <span style="color: #A52A2A; font-weight: bold;">if</span> ele-0==0.:
                    <span style="color: #A52A2A; font-weight: bold;">continue</span>
                <span style="color: #A52A2A; font-weight: bold;">else</span>:
                    <span style="color: #A52A2A; font-weight: bold;">self</span>.user_roles_dict<span style="color: #707183;">[</span>user<span style="color: #707183;">]</span>.append<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.role_list<span style="color: #7388d6;">[</span>jndex<span style="color: #7388d6;">]</span><span style="color: #707183;">)</span>

        <span style="color: #A52A2A; font-weight: bold;">print</span><span style="color: #707183;">(</span><span style="color: #4E9A06;">"&gt;&gt;&gt;Begin to construct map from role to actions."</span><span style="color: #707183;">)</span>
        <span style="color: #A52A2A; font-weight: bold;">self</span>.action_roles_dict=<span style="color: #707183;">{}</span>
        <span style="color: #A52A2A; font-weight: bold;">for</span> index, action <span style="color: #A52A2A; font-weight: bold;">in</span> <span style="color: #A020F0;">enumerate</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.action_list<span style="color: #707183;">)</span>:
            <span style="color: #A52A2A; font-weight: bold;">self</span>.action_roles_dict<span style="color: #707183;">[</span>action<span style="color: #707183;">]</span>=<span style="color: #707183;">[]</span>

            <span style="color: #0084C8; font-weight: bold;">index_roles_list</span>=<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.role_action_matrix.T<span style="color: #707183;">)[</span>index<span style="color: #707183;">]</span>
            <span style="color: #A52A2A; font-weight: bold;">for</span> jndex,ele <span style="color: #A52A2A; font-weight: bold;">in</span> <span style="color: #A020F0;">enumerate</span><span style="color: #707183;">(</span>index_roles_list<span style="color: #707183;">)</span>:
                <span style="color: #A52A2A; font-weight: bold;">if</span> ele-0==0.:
                    <span style="color: #A52A2A; font-weight: bold;">continue</span>
                <span style="color: #A52A2A; font-weight: bold;">else</span>:
                    <span style="color: #A52A2A; font-weight: bold;">self</span>.action_roles_dict<span style="color: #707183;">[</span>action<span style="color: #707183;">]</span>.append<span style="color: #707183;">(</span><span style="color: #7388d6;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.role_list<span style="color: #909183;">[</span>jndex<span style="color: #909183;">]</span><span style="color: #7388d6;">)</span><span style="color: #707183;">)</span>
</pre>
</div>

<p>
从中可以看出，通过输入user与role的关联矩阵、role与action的关联矩阵，RBAC管理器会维护从user到action的查询表，从而正确快速地完成查询。
</p>

<p>
那么，user与role的关系，role与action的关系，应当通过何种方式定义呢？
</p>

<p>
最简单的方式是通过手工输入，但这种方式效率过低，并且，当面对较大的user、role、action数目时，难以维护和管理。面对这种问题，基于规则的自动生成、基于数据库和配置文件进行管理都是必不可少的解决方案，后面将会对其进行介绍。
</p>
</div>
</div>

<div id="outline-container-orgcdd6de5" class="outline-4">
<h4 id="orgcdd6de5"><span class="section-number-4">2.1.2</span> 增删改查</h4>
<div class="outline-text-4" id="text-2-1-2">
<p>
此处的增删改查都是面向RBAC数据而言的。当然，关于这些操作本身的权限问题，将在对RBAC的管理中进行介绍。增删改查的操作，本质上是改变了RBAC所维护的三大对象的列表，同时将两个稀疏矩阵进行修改，最终在此基础上重新加载映射hash表，以等待查询。此处将部分代码作为示例展示：
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">addUser</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>,user,user_roles_list=<span style="color: #F5666D;">None</span>, user_roles_dict=<span style="color: #F5666D;">None</span><span style="color: #707183;">)</span>:
    <span style="color: #4E9A06;">"""add `user` to RBAC system, with user-role-list, if not, use user-roles-dict"""</span>

    <span style="color: #A52A2A; font-weight: bold;">self</span>.user_list.append<span style="color: #707183;">(</span>user<span style="color: #707183;">)</span>
    <span style="color: #0084C8; font-weight: bold;">user_role_lss</span>=<span style="color: #A52A2A; font-weight: bold;">self</span>.array2lists<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.user_role_matrix<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">if</span> user_roles_list <span style="color: #A52A2A; font-weight: bold;">is</span> <span style="color: #A52A2A; font-weight: bold;">not</span> <span style="color: #F5666D;">None</span>:
        user_role_lss.append<span style="color: #707183;">(</span>user_role_lss<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">else</span>:
        user_role_lss.append<span style="color: #707183;">(</span>user_roles_dict<span style="color: #7388d6;">[</span>user<span style="color: #7388d6;">]</span><span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.user_role_matrix=np.array<span style="color: #707183;">(</span>user_role_lss<span style="color: #707183;">)</span>

    <span style="color: #A52A2A; font-weight: bold;">self</span>.reloadForMap<span style="color: #707183;">()</span>

<span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">addAction</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>, action,cannot_action_list, action_roles_list=<span style="color: #F5666D;">None</span>, action_roles_dict=<span style="color: #F5666D;">None</span><span style="color: #707183;">)</span>:
    <span style="color: #4E9A06;">"""add `action` to RBAC system, with action-roles-list, if not, use action-roles-dict"""</span>


    <span style="color: #A52A2A; font-weight: bold;">self</span>.action_list.append<span style="color: #707183;">(</span>action<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.cannot_action_list.append<span style="color: #707183;">(</span>cannot_action<span style="color: #707183;">)</span>

    <span style="color: #0084C8; font-weight: bold;">action_role_lss</span>=<span style="color: #A52A2A; font-weight: bold;">self</span>.array2lists<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.role_action_matrix.T<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">if</span> action_roles_list <span style="color: #A52A2A; font-weight: bold;">is</span> <span style="color: #A52A2A; font-weight: bold;">not</span> <span style="color: #F5666D;">None</span>:
        action_role_lss.append<span style="color: #707183;">(</span>action_role_lss<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">else</span>:
        action_role_lss.append<span style="color: #707183;">(</span>action_roles_dict<span style="color: #7388d6;">[</span>action<span style="color: #7388d6;">]</span><span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.role_action_matrix=np.array<span style="color: #707183;">(</span>action_role_lss<span style="color: #707183;">)</span>.T
    <span style="color: #A52A2A; font-weight: bold;">self</span>.reloadForMap<span style="color: #707183;">()</span>

<span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">addRole</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>, role, role_users_list, role_action_list<span style="color: #707183;">)</span>:
    <span style="color: #4E9A06;">"""add `role` to RBAC system, with role-users-list, if not, use role-action-dict"""</span>

    <span style="color: #204A87;">## </span><span style="color: #204A87;">add role</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.role_list.append<span style="color: #707183;">(</span>role<span style="color: #707183;">)</span>

    <span style="color: #204A87;">## </span><span style="color: #204A87;">update user role matrix</span>
    <span style="color: #0084C8; font-weight: bold;">user_role_lss</span>=<span style="color: #A52A2A; font-weight: bold;">self</span>.array2lists<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.user_role_matrix<span style="color: #707183;">)</span>
    user_role_lss.append<span style="color: #707183;">(</span>role_users_list<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.user_role_matrix=np.array<span style="color: #707183;">(</span>user_role_lss<span style="color: #707183;">)</span>

    <span style="color: #204A87;"># </span><span style="color: #204A87;">updat role action matrix</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.role_action_matrix=np.array<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.array2lists<span style="color: #7388d6;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.role_action_matrix<span style="color: #7388d6;">)</span>.append<span style="color: #7388d6;">(</span>role_action_list<span style="color: #7388d6;">)</span><span style="color: #707183;">)</span>

    <span style="color: #A52A2A; font-weight: bold;">self</span>.reloadForMap<span style="color: #707183;">()</span>


<span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">removeUser</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>,user<span style="color: #707183;">)</span>:
    <span style="color: #4E9A06;">"""remove `user` from RBAC system"""</span>

    <span style="color: #0084C8; font-weight: bold;">index</span>=<span style="color: #A52A2A; font-weight: bold;">self</span>.user_list.index<span style="color: #707183;">(</span>user<span style="color: #707183;">)</span>

    <span style="color: #A52A2A; font-weight: bold;">self</span>.user_list.remove<span style="color: #707183;">(</span>user<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.user_role_matrix=np.delete<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.user_role_matrix,index,axis=0<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.reloadForMap<span style="color: #707183;">()</span>

<span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">removeAction</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>,action<span style="color: #707183;">)</span>:
    <span style="color: #4E9A06;">"""remove `action` from RBAC system"""</span>

    <span style="color: #0084C8; font-weight: bold;">index</span>=<span style="color: #A52A2A; font-weight: bold;">self</span>.action_list.index<span style="color: #707183;">(</span>user<span style="color: #707183;">)</span>

    <span style="color: #A52A2A; font-weight: bold;">self</span>.action_list.remove<span style="color: #707183;">(</span>user<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.role_action_matrix=np.delete<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.role_action_matrix,index,axis=1<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.reloadForMap<span style="color: #707183;">()</span>

<span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">removeRole</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>, role<span style="color: #707183;">)</span>:
    <span style="color: #4E9A06;">"""remove `role` from RBAC system"""</span>

    <span style="color: #0084C8; font-weight: bold;">index</span>=<span style="color: #A52A2A; font-weight: bold;">self</span>.role_list.index<span style="color: #707183;">(</span>role<span style="color: #707183;">)</span>

    <span style="color: #A52A2A; font-weight: bold;">self</span>.role_list.remove<span style="color: #707183;">(</span>role<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.user_role_matrix=np.delete<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.user_role_matrix,index,axis=1<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.role_action_matrix=np.delete<span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.role_action_matrix,index,axis=0<span style="color: #707183;">)</span>
    <span style="color: #A52A2A; font-weight: bold;">self</span>.reloadForMap<span style="color: #707183;">()</span>
</pre>
</div>
</div>
</div>

<div id="outline-container-org1d63dad" class="outline-4">
<h4 id="org1d63dad"><span class="section-number-4">2.1.3</span> 形成配置结果：存储与加载</h4>
<div class="outline-text-4" id="text-2-1-3">
<p>
当系统比较简单时，直接将配置信息写入代码中即可解决问题。当系统变得复杂后，将配置信息保存下来，并且下次使用时可以自动加载，就变得十分重要了。当系统变得更加复杂，三大对象的数量级使得单个文件都变得臃肿之后，数据的实现才有必要。本文面对的是中间复杂度的情形。在这种情形下，作者认为，* 如果user、role、action的数量非得要经由数据库进行管理，那么说明这里没有进行足够的抽象。 * 这是因为：
</p>

<p>
维护user、role、action三者的对应关系是需要人工设计的，即使是基于生成，也是人工设计规则。因此，这样的一种0-1矩阵必须具备直白的人类可以理解的复杂度。举例而言，在一个教学管理系统里，学生们的ID均对应者同样的身份——学生。在进行注册时，RBAC可以通过两种思路实现：
</p>
<ol class="org-ol">
<li>在后台设计一种规则。使得所有的这样一类ID都映射到一个名为stu的role上；</li>
<li><p>
在后端设计一种规则，将这些ID按照其特征（如本科生、硕士生，男的，女的）映射到user上，然后将每一个user映射到x个role上，每一个role背后代表了一类角色。
</p>

<p>
第一种设计比较通用，也比较简单，符合扁平化设计的规则。本文主要为第二种思路服务，因为通过这种方式，可以实现现实场景无关因素和RBAC权限控制的解耦，后续的RBAC控制和维护都变得简单了。本文的场景将佐证这一观点。
</p>

<p>
下面是一个简单的JSON文件的示例：
</p>

<div class="org-src-container">
<pre class="src src-json">{"users": ["id001", "id002", "id003"],
  "roles": ["admin", "lv3", "lv2"],
  "actions": ["money10000", "moneyPlus1", "automaticPlus1"],
  "cannot_actions": ["say_cannot", "say_cannot", "say_cannot"],
  "user_role_matrix": [[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]],
  "role_action_matrix": [[1.0, 1.0, 1.0], [0.0, 1.0, 1.0], [0.0, 0.0, 1.0]],
  "user_roles_dict": {
    "id001": ["admin"],
    "id002": ["lv3"],
    "id003": ["lv2"]},
  "action_roles_dict":
  {"money10000": ["admin"],
    "moneyPlus1": ["admin", "lv3"],
    "automaticPlus1": ["admin", "lv3", "lv2"]}}

</pre>
</div></li>
</ol>
</div>
</div>

<div id="outline-container-org080ffea" class="outline-4">
<h4 id="org080ffea"><span class="section-number-4">2.1.4</span> 与数据库的交互</h4>
<div class="outline-text-4" id="text-2-1-4">
<p>
与数据的交互，包括从业务数据库中抽取user，以及RBAC本身数据的存储。这一部分有待加入。
</p>
</div>
</div>
</div>
<div id="outline-container-org8878052" class="outline-3">
<h3 id="org8878052"><span class="section-number-3">2.2</span> META-RBAC：对RBAC进行管理</h3>
<div class="outline-text-3" id="text-2-2">
<p>
本小节以谈论课程中提到的的使用RBAC管理RBAC的讨论。
用RBAC管理RBAC当然是可以的！但问题是，用来进行管理的RBAC，是不是同样也需要被别的RBAC管理？在这个问题上，笔者的观点是，越上层的机制，越简单，越不容易变动，所以，再复杂的系统，两三层也完全足够了。这和自然界食物链的长度一般不超过5是相似的。
</p>
</div>
</div>

<div id="outline-container-orge78be8c" class="outline-3">
<h3 id="orge78be8c"><span class="section-number-3">2.3</span> 为用户提供一定的权限管理自由度——全新的RBAC实现</h3>
<div class="outline-text-3" id="text-2-3">
<p>
时间原因，这部分没有完成。在最后的大作业里将会出现这一部分。
</p>
</div>
<div id="outline-container-orgc76a2d8" class="outline-4">
<h4 id="orgc76a2d8"><span class="section-number-4">2.3.1</span> 简述权限管理自由度</h4>
</div>
<div id="outline-container-orge3ce8d7" class="outline-4">
<h4 id="orge3ce8d7"><span class="section-number-4">2.3.2</span> 实现与RBAC库的融合</h4>
</div>
</div>
</div>
<div id="outline-container-org6465345" class="outline-2">
<h2 id="org6465345"><span class="section-number-2">3</span> 事件管理和监听触发机制的自我实现</h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-org8b69752" class="outline-3">
<h3 id="org8b69752"><span class="section-number-3">3.1</span> 基本原理</h3>
<div class="outline-text-3" id="text-3-1">
<p>
监听触发模式和事件管理机制在JAVA、Javascript等开发型语言中具有极其广泛的定义和应用，但每种语言的实现存在一些不同。在以对象为核心的语言中，listerner作为一个对象形式的属性被加入到另一个实例化的对象里，该对象常常具有一个初始化为空的监听器列表，而后，当某一个方法被调用时，该方法会遍历基于监听器基类遍历列表中所有的监听器，以发送事件。而在另外一些面向对象语言里，为了防止在高并发背景下事件监听和发送的一些额外问题，会使用一个特殊的实例化对象——事件管理器去管理这些监听触发的过程。
</p>

<p>
由于使用管理器可以实现监听者和监听对象在封装上的解耦，同时可以更好地应对海量监听信息的情形，本文基于事件管理器的方法进行使用。python标准不存在这套机制，故此处自我封装实现之。
</p>
</div>
</div>
<div id="outline-container-org4ddd5bb" class="outline-3">
<h3 id="org4ddd5bb"><span class="section-number-3">3.2</span> 事件管理器的设计</h3>
<div class="outline-text-3" id="text-3-2">
<p>
事件管理器是本机制的核心，因而首先介绍。事件管理器的核心是管理事件，因此，该对象一直维护一个事件-监听器的哈希表，该字典以每一个事件类型为其键，以指向该事件需要触发的监听器函数对象的指针的列表为键所对应值，当接受到一个事件时，管理器就会触发该事件对应的所有的监听器。在这个过程中，传入的事件可以非常多，因此，管理器还需要维护一个事件队列，以实现间隔触发。
该部分整体的代码实现如下，可以发现，实现的代码并不优雅，尤其是传入监听器信息时：
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #A52A2A; font-weight: bold;">class</span> <span style="color: #2F8B58; font-weight: bold;">myEventManager</span><span style="color: #707183;">(</span><span style="color: #A020F0;">object</span><span style="color: #707183;">)</span>:
    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">__init__</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span><span style="color: #707183;">)</span>:
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__is_run=0
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_queue=Queue<span style="color: #707183;">()</span>
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__thread=Thread<span style="color: #707183;">(</span>target=<span style="color: #A52A2A; font-weight: bold;">self</span>.__run<span style="color: #707183;">)</span>
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict=<span style="color: #707183;">{}</span>

    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">__run</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span><span style="color: #707183;">)</span>:
        <span style="color: #A52A2A; font-weight: bold;">self</span>.is_run=1
        <span style="color: #A52A2A; font-weight: bold;">while</span> <span style="color: #F5666D;">True</span>:
            <span style="color: #A52A2A; font-weight: bold;">try</span>:
                <span style="color: #A52A2A; font-weight: bold;">print</span><span style="color: #707183;">(</span><span style="color: #4E9A06;">"&#24320;&#22987;&#22788;&#29702;&#26032;&#30340;&#25968;&#25454;...."</span><span style="color: #707183;">)</span>
                <span style="color: #0084C8; font-weight: bold;">event</span>=<span style="color: #A52A2A; font-weight: bold;">self</span>.__event_queue.get<span style="color: #707183;">(</span>block=<span style="color: #F5666D;">True</span>,timeout=5<span style="color: #707183;">)</span>
                <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_process<span style="color: #707183;">(</span>event<span style="color: #707183;">)</span>
            <span style="color: #A52A2A; font-weight: bold;">except</span> Empty:
                <span style="color: #A52A2A; font-weight: bold;">print</span><span style="color: #707183;">(</span><span style="color: #4E9A06;">"&#27809;&#26377;&#25968;&#25454;&#65292;&#31561;&#24453;&#20013;......"</span><span style="color: #707183;">)</span>
                <span style="color: #A52A2A; font-weight: bold;">pass</span>

    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">start</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span><span style="color: #707183;">)</span>:
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__is_run=1
        <span style="color: #A52A2A; font-weight: bold;">print</span><span style="color: #707183;">(</span><span style="color: #4E9A06;">"&#20107;&#20214;&#31649;&#29702;&#22120;&#24050;&#21551;&#21160;"</span><span style="color: #707183;">)</span>
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__thread.start<span style="color: #707183;">()</span>

    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">stop</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span><span style="color: #707183;">)</span>:
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__is_run=0
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__thread.join<span style="color: #707183;">()</span>


    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">__event_process</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>,event<span style="color: #707183;">)</span>:
        <span style="color: #A52A2A; font-weight: bold;">if</span> event.type_ <span style="color: #A52A2A; font-weight: bold;">in</span> <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict.keys<span style="color: #707183;">()</span>:
            <span style="color: #A52A2A; font-weight: bold;">for</span> listerner <span style="color: #A52A2A; font-weight: bold;">in</span> <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict<span style="color: #707183;">[</span>event.type_<span style="color: #707183;">]</span>:
                listerner<span style="color: #707183;">(</span>event<span style="color: #707183;">)</span>
        <span style="color: #A52A2A; font-weight: bold;">print</span><span style="color: #707183;">(</span><span style="color: #4E9A06;">"&#20107;&#20214;&#22788;&#29702;&#23436;&#25104;"</span><span style="color: #707183;">)</span>

    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">addEventListerner</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>,type_,listerner<span style="color: #707183;">)</span>:
        <span style="color: #A52A2A; font-weight: bold;">if</span> type_ <span style="color: #A52A2A; font-weight: bold;">not</span> <span style="color: #A52A2A; font-weight: bold;">in</span> <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict.keys<span style="color: #707183;">()</span>:
            <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict<span style="color: #707183;">[</span>type_<span style="color: #707183;">]</span>=<span style="color: #707183;">[]</span>
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict<span style="color: #707183;">[</span>type_<span style="color: #707183;">]</span>.append<span style="color: #707183;">(</span>listerner<span style="color: #707183;">)</span>
        <span style="color: #A52A2A; font-weight: bold;">print</span><span style="color: #707183;">(</span><span style="color: #4E9A06;">"&#30417;&#21548;&#22120;&#28155;&#21152;&#25104;&#21151;"</span><span style="color: #707183;">)</span>

    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">removeEventListerner</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>,type_,listerner<span style="color: #707183;">)</span>:
        <span style="color: #A52A2A; font-weight: bold;">if</span> type_ <span style="color: #A52A2A; font-weight: bold;">in</span> <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict.keys<span style="color: #707183;">()</span>:
            <span style="color: #A52A2A; font-weight: bold;">if</span> <span style="color: #A020F0;">len</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict<span style="color: #7388d6;">[</span>type_<span style="color: #7388d6;">]</span><span style="color: #707183;">)</span>&gt;1:
                <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict<span style="color: #707183;">[</span>type_<span style="color: #707183;">]</span>.remove<span style="color: #707183;">(</span>listerner<span style="color: #707183;">)</span>
            <span style="color: #A52A2A; font-weight: bold;">else</span>:
                <span style="color: #A52A2A; font-weight: bold;">del</span> <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_listerner_dict<span style="color: #707183;">[</span>type_<span style="color: #707183;">]</span>


    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">sendEvent</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>,event<span style="color: #707183;">)</span>:
        <span style="color: #A52A2A; font-weight: bold;">print</span><span style="color: #707183;">(</span><span style="color: #4E9A06;">"&#20107;&#20214;&#21457;&#36865;&#25104;&#21151;"</span><span style="color: #707183;">)</span>
        <span style="color: #A52A2A; font-weight: bold;">self</span>.__event_queue.put<span style="color: #707183;">(</span>event<span style="color: #707183;">)</span>
</pre>
</div>
</div>
</div>


<div id="outline-container-org67e2b1d" class="outline-3">
<h3 id="org67e2b1d"><span class="section-number-3">3.3</span> 监听器和触发事件的设计</h3>
<div class="outline-text-3" id="text-3-3">
<p>
监听器和触发事件的设计相比事件管理较为简单。唯一的区别是，在诸如JAVA这种强制面向对象语言中，函数需要通过类进行定义。而此处，监听器的设计则单单通过函数定义了。项目中的一个例子为：
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">ListernerQiangHua1times</span><span style="color: #707183;">(</span>event1times<span style="color: #707183;">)</span>:
    <span style="color: #0084C8; font-weight: bold;">action</span>=controller.myRBAC.return_actions<span style="color: #707183;">(</span>event1times.datadict<span style="color: #7388d6;">[</span><span style="color: #4E9A06;">"data"</span><span style="color: #7388d6;">]</span>.getUser<span style="color: #7388d6;">()</span>,successQiangHua1times<span style="color: #707183;">)</span>
    action<span style="color: #707183;">(</span>event1times.datadict<span style="color: #7388d6;">[</span><span style="color: #4E9A06;">"data"</span><span style="color: #7388d6;">]</span><span style="color: #707183;">)</span>
</pre>
</div>

<p>
可以发现，这样的一个监听器以定义的数据对象作为输入，使用数据字典中的数据进行处理。由于此处需要将RBAC与listerner进行结合，所以实践并非直接被执行，而是经过一个查询之后，在进行执行。经由这种方式，当没有权限时，针对该动作的对应处理动作就会被调用。
</p>

<p>
触发事件的设计稍微复杂一点。一方面，触发事件要通过事件类型同监听器进行绑定，另一方面，触发事件中要包含进行处理的数据。可以将这个特性抽象出来获得一个有关于事件的基类：
</p>


<div class="org-src-container">
<pre class="src src-python"><span style="color: #A52A2A; font-weight: bold;">class</span> <span style="color: #2F8B58; font-weight: bold;">Event</span>:
    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">__init__</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>,type_=<span style="color: #F5666D;">None</span>,datadict=<span style="color: #F5666D;">None</span><span style="color: #707183;">)</span>:
        <span style="color: #A52A2A; font-weight: bold;">self</span>.type_=type_
        <span style="color: #A52A2A; font-weight: bold;">self</span>.datadict=datadict
</pre>
</div>

<p>
之后，基于这个事件类去实例化对象就好了，下面的例子又定义了新的子类，这是为了将每一个事件同其user挂钩，因为有时监听器需要回过头来对对象进行修改，通过这种方式，可以实现回调。
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #A52A2A; font-weight: bold;">class</span> <span style="color: #2F8B58; font-weight: bold;">EventQianghua1Times</span><span style="color: #707183;">(</span>Event<span style="color: #707183;">)</span>:
    <span style="color: #A52A2A; font-weight: bold;">def</span> <span style="color: #00578E; font-weight: bold;">__init__</span><span style="color: #707183;">(</span><span style="color: #A52A2A; font-weight: bold;">self</span>,user<span style="color: #707183;">)</span>:
        <span style="color: #A020F0;">super</span><span style="color: #707183;">(</span>EventQianghua1Times, <span style="color: #A52A2A; font-weight: bold;">self</span><span style="color: #707183;">)</span>.__init__<span style="color: #707183;">(</span><span style="color: #4E9A06;">"&#24378;&#21270;&#19968;&#27425;"</span>,<span style="color: #7388d6;">{</span><span style="color: #4E9A06;">"data"</span>:user<span style="color: #7388d6;">}</span><span style="color: #707183;">)</span>
</pre>
</div>
</div>
</div>
</div>

<div id="outline-container-orgae6b294" class="outline-2">
<h2 id="orgae6b294"><span class="section-number-2">4</span> 以简陋到极致的一个界面为例，展露游戏中RBAC应用的嵌入式视角</h2>
<div class="outline-text-2" id="text-4">
<p>
前面更多地都是对工具的利用，下面以一个例子的形式将作业进行展现。
</p>
</div>

<div id="outline-container-org26468ff" class="outline-3">
<h3 id="org26468ff"><span class="section-number-3">4.1</span> 基础的场景介绍</h3>
<div class="outline-text-3" id="text-4-1">
<p>
此处设想的是这样一个场景：在某一个游戏下，存在着这样一个装备强化功能。对于装备强化功能，游戏方支持“强化一次”、“强化十次”和“强化一百次”。如果一个玩家等级在10级以下，则只能使用强化一次，十级以上将解锁强化十次，而如果这位玩家充了VIP会员，则他可以使用强化100次的功能。本次作业就是在如此简单寻常的场景下进行的。
</p>

<ol class="org-ol">
<li>动作：分别包括强化一次、强化十次、强化一百次三个函数。当没有权限时，默认不执行并alert没有权限的弹窗。</li>
<li>角色：小于十级、大于等于十级、VIP。</li>
<li>用户：此处的用户进行了一定的抽象。正常而言，user需要是游戏玩家，而一个游戏里面玩家的数量是非常多的，因此，我们基于对每个player进行简单的属性提取，以得到user。在此处，user是一个二元组拼接的结果，也就是将数据库中的玩家等级（level）和玩家是否是VIP（is_VIP）两个变量做字符串形式的拼接。假设在该游戏里等级一共有100级，VIP只有一种，这样得到的映射矩阵其元素数为100*2*3=600个。如果不进行抽象，但是一个映射矩阵就需要上千万个元素不止了。</li>
</ol>
</div>
</div>

<div id="outline-container-org46eb240" class="outline-3">
<h3 id="org46eb240"><span class="section-number-3">4.2</span> 界面设与示例</h3>
<div class="outline-text-3" id="text-4-2">
<p>
本文基于pyqt5自己撰写了一个简陋的界面，也是笔者第一次学习写界面。随后学了前端，这个界面如果使用前端，估计只需要十分钟，大作业将使用BS模式实现。
</p>

<p>
主界面为：
</p>


<div id="orgd6d012b" class="figure">
<p><img src="./images/20210617150432.png" alt="20210617150432.png" />
</p>
</div>

<p>
如果有权限，界面为：
</p>


<div id="orgfec301b" class="figure">
<p><img src="./images/20210617150515.png" alt="20210617150515.png" />
</p>
</div>

<p>
如果没有权限，截面为：
</p>


<div id="orgddd39aa" class="figure">
<p><img src="./images/20210617150558.png" alt="20210617150558.png" />
</p>
</div>


<p>
举例，如果我们定义一个玩家，等级3且没有VIP，那么他只能够进行强化一次的操作。这时后台会获取以下日志：
</p>


<div class="org-src-container">
<pre class="src src-python">&#27809;&#26377;&#25968;&#25454;&#65292;&#31561;&#24453;&#20013;......
&#24320;&#22987;&#22788;&#29702;&#26032;&#30340;&#25968;&#25454;....
&#20107;&#20214;&#21457;&#36865;&#25104;&#21151;
<span style="color: #707183;">{</span><span style="color: #4E9A06;">'1_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'1_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'2_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'2_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'3_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'3_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'4_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'4_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'5_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'5_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'6_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'6_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'7_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'7_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'8_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'8_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'9_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'9_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'10_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'10_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'11_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'11_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'12_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'12_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'13_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'13_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'14_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'14_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'15_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'15_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'16_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'16_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'17_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'17_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'18_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'18_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'19_0'</span>: <span style="color: #7388d6;">[]</span>, <span style="color: #4E9A06;">'19_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'20_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'20_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'21_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'21_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'22_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'22_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'23_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'23_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'24_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'24_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'25_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'25_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'26_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'26_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'27_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'27_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'28_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'28_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'29_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'29_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'30_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'30_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'31_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'31_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'32_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'32_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'33_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'33_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'34_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'34_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'35_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'35_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'36_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'36_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'37_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'37_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'38_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'38_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'39_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'39_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'40_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'40_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'41_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'41_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'42_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'42_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'43_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'43_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'44_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'44_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'45_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'45_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'46_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'46_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'47_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'47_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'48_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'48_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'49_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'49_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'50_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'50_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'51_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'51_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'52_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'52_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'53_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'53_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'54_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'54_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'55_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'55_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'56_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'56_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'57_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'57_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'58_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'58_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'59_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'59_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'60_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'60_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'61_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'61_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'62_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'62_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'63_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'63_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'64_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'64_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'65_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'65_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'66_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'66_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'67_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'67_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'68_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'68_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'69_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'69_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'70_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'70_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'71_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'71_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'72_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'72_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'73_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'73_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'74_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'74_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'75_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'75_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'76_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'76_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'77_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'77_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'78_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'78_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'79_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'79_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'80_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'80_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'81_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'81_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'82_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'82_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'83_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'83_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'84_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'84_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'85_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'85_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'86_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'86_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'87_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'87_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'88_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'88_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'89_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'89_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'90_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'90_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'91_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'91_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'92_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'92_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'93_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'93_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'94_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'94_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'95_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'95_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'96_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'96_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'97_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'97_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'98_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'98_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'99_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'99_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'100_0'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span><span style="color: #7388d6;">]</span>, <span style="color: #4E9A06;">'100_1'</span>: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span><span style="color: #707183;">}</span>
<span style="color: #707183;">{</span>&lt;function successQiangHua1times at 0x000002129D7BA1F0&gt;: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_under_10'</span>, <span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, &lt;function successQiangHua10times at 0x00000212A4E34D30&gt;: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'level_up_20'</span>, <span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span>, &lt;function successQiangHua100times at 0x00000212A4E34DC0&gt;: <span style="color: #7388d6;">[</span><span style="color: #4E9A06;">'vip'</span><span style="color: #7388d6;">]</span><span style="color: #707183;">}</span>
================inference================
We allow <span style="color: #707183;">[</span>3_0<span style="color: #707183;">]</span> becuase of roles <span style="color: #707183;">[</span><span style="color: #7388d6;">{</span><span style="color: #4E9A06;">'level_under_10'</span><span style="color: #7388d6;">}</span><span style="color: #707183;">]</span> <span style="color: #A52A2A; font-weight: bold;">for</span> action <span style="color: #707183;">[</span>&lt;function successQiangHua1times at 0x000002129D7BA1F0&gt;<span style="color: #707183;">]</span>
========END-inference================
update! to: 13
&#20107;&#20214;&#22788;&#29702;&#23436;&#25104;
</pre>
</div>

<p>
日志中详细记录了是哪一个user使用哪一个role完成或者失败了哪一个action。
</p>

<p>
但是，这里的问题是，此处的记录没有把player的粒度刻画出来，因此是不够精确的。一个比较好的方式是将RBAC与推荐相关的log记录分离，二者均在listerner里被记录，因为在监听器中，每一个player的信息被默认为是已知的。
</p>
</div>
</div>
</div>

<div id="outline-container-org004f4fc" class="outline-2">
<h2 id="org004f4fc"><span class="section-number-2">5</span> 附录</h2>
<div class="outline-text-2" id="text-5">
<p>
源代码网址： <a href="https://gitee.com/18842378119/course1-zhuang-bei-qiang-hua">https://gitee.com/18842378119/course1-zhuang-bei-qiang-hua</a>
</p>

<p>
环境：
</p>

<div class="org-src-container">
<pre class="src src-sh"><span style="color: #204A87;"># </span><span style="color: #204A87;">python 3.x</span>
pip install pyqt5 numpy
</pre>
</div>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="date">Date: Tue Jun 15 10:20:36 2021</p>
<p class="author">Author: 梁子，软件学院，S0083，3120305385</p>
<p class="date">Created: 2022-03-26 周六 21:55</p>
<p class="validation"><a href="https://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
